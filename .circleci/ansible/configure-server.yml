---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      # Your code here

    - name: "install python for Ansible."
      # Your code here
    # hosts: python
    # become: true
    # gather_facts: no
    #   raw: yum -y install python


  # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"  
    # Add more env vars here
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: 5432
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

  roles:
    # Your code here
  - name: "update apt packages"
  become: true
  become_method: sudo
  apt:
    update_cache: yes

  - name: "upgrade apt packages."
    become: yes
    apt:
      update_cache: yes

  - name: "Remove dependencies that are no longer required"
    become: true
    apt:
      autoremove: yes

  - name: "install dependencies."
    become: yes
    apt:
      name: ["nodejs", "npm"]
      state: latest
      update_cache: yes

  - name: "install pm2"
    become: yes
    npm:
      name: pm2
      global: yes
      production: yes
      state: present